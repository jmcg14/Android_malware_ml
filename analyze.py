import sklearn
import numpy as np
import timeit
import sys
from timeit import default_timer
from sklearn.naive_bayes import MultinomialNB
from sklearn.linear_model import LogisticRegression
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import StratifiedShuffleSplit
from sklearn.metrics import confusion_matrix
from sklearn.tree import DecisionTreeClassifier
from sklearn.externals import joblib


def main():
    file = open(sys.argv[1])
    perms = file.readlines()
    count_vect = joblib.load("./models/vector")
    features = count_vect.transform(perms)

    NBclf = joblib.load("./models/NB")
    DTclf = joblib.load("./models/DT")
    LRclf = joblib.load("./models/LR")

    print "Analyzing using saved MultiNomial Naive Bayes model:"
    pred = NBclf.predict(features)
    if(pred[0] == 0):
        print "Benign"
    else:
        print "Malicious"

    print "Analyzing using saved Decision Tree model:"
    pred = DTclf.predict(features)
    if(pred[0] == 0):
        print "Benign"
    else:
        print "Malicious"

    print "Analyzing using saved Logistic Regression model:"
    pred = LRclf.predict(features)
    if(pred[0] == 0):
        print "Benign"
    else:
        print "Malicious"

        
    return




if __name__ == "__main__":
    main()
